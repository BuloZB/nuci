<?xml version="1.0" encoding="UTF-8"?>
<module name="ca-gen" xmlns="urn:ietf:params:xml:ns:yang:yin:1">
  <yang-version value="1"/>
  <namespace uri="http://www.nic.cz/ns/router/ca-gen"/>
  <prefix value="ca-gen"/>
  <revision date="2016-12-07">
    <description>Initial revision</description>
  </revision>
  <typedef name="cert-name">
    <description>
      <text>What is allowed as a name of certificate. It is embedded in the certificate as CN, as well as part of the file name in which it is stored.</text>
    </description>
    <type name="string">
      <pattern value="[a-zA-Z0-9_.-]+"/>
    </type>
  </typedef>
  <container name='cas'>
    <description>
      <text>Container for all the CAs present in the system.</text>
    </description>
    <list name='ca'>
      <key value='name'/>
      <description>
        <text>Single certification authority and its status.</text>
      </description>
      <leaf name='name'>
        <description>
          <text>Identifier of the CA and also the CN of the root certificate.</text>
        </description>
        <type name='client-name'/>
      </leaf>
      <list name='cert'>
        <key value='serial'/>
        <description>
          <text>A single certificate that relates to the authority (either issued by the CA or part of the CA itself).</text>
        </description>
        <leaf name='serial'>
          <description>
            <text>The serial of the certificate. The serial is the certificate's unique identifier. In case of the root of the CA, it is '--', otherwise it is a number.</text>
          </description>
          <type name='string'/>
        </leaf>
        <leaf name='name'>
          <description>
            <text>The CN of the certificate. This does not have to be unique. It is also used as a part of the file name where the certificate is stored.</text>
          </description>
        </leaf>
        <leaf name='type'>
          <description>
            <text>The type of the certificate.</text>
          </description>
          <type name='enumeration'>
            <enum name='root'/> <!-- The root of the CA itself. -->
            <enum name='server'/> <!-- A certificate for a server. -->
            <enum name='client'/> <!-- A certificate to authenticate a client. -->
          </type>
        </leaf>
        <leaf name='status'>
          <description>
            <text>The status of the certificate.</text>
          </description>
          <type name='enumeration'>
            <enum name='generating'/> <!-- The certificate is being generated and is not ready yet. -->
            <enum name='active'/>
            <enum name='lost'/> <!-- Like active, but the certificate file has been overwritten by another with the same name. If a client or server has its own copy, it can still be used (and it can be revoked), but it is no longer possible to download from here. -->
            <enum name='revoked'/>
            <enum name='expired'/> <!-- Unlikely to happen, with 10 years of validity -->
          </type>
        </leaf>
        <leaf name='cert'>
          <description>
            <text>A path to the file containing the certificate. This is present only for active certificates.</text>
          </description>
          <type name='string'/>
          <mandatory value='false'/>
        </leaf>
        <leaf name='key'>
          <description>
            <text>A path to the file containing the key to the corresponding certificate. This is present only for active non-root certificates.</text>
          </description>
          <type name='string'/>
          <mandatory value='false'/>
        </leaf>
      </list>
      <container name='dhparams'>
        <description>
          <text>Information about DH parameters generated together with the CA. It is not strictly needed to have DH parameters, but many uses for CA have a use for DH parameters as well, so it is included. If this is not present, no DH parameters were generated for the CA.</text>
        </description>
        <leaf name='file'>
          <description>
            <text>A path to the file containing the DH parameters. Only present if the DH parameteres are already generated.</text>
          </description>
          <type name='string'/>
          <mandatory value='false'/>
        </leaf>
        <leaf name='generating'>
          <description>
            <text>Present in case the DH parameters are being generated now.</text>
          </description>
          <type name='empty'/>
          <mandatory value='false'/>
        </leaf>
      </container>
    </list>
  </container>
</module>
