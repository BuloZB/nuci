<?xml version="1.0" encoding="UTF-8"?>
<module name="securris" xmlns="urn:ietf:params:xml:ns:yang:yin:1">
  <yang-version value="1"/>
  <namespace uri="http://www.nic.cz/ns/router/securris"/>
  <prefix value="securris"/>

  <!-- Typedefs -->

  <typedef name="zone-name">
    <description>
      <text>Name of a zone.</text>
    </description>
    <type name="string"/>
  </typedef>
  <typedef name="device-id">
    <description>
      <text>
        24-bit numeric ID of a Securris device.
      </text>
    </description>
    <type name="uint32">
      <range value="0..16777215"/>
    </type>
  </typedef>
  <typedef name="dump-format">
    <description>
      <text>
        Possible formats of operational state dumps.
      </text>
    </description>
    <type name="enumeration">
      <enum name="json"/>
      <enum name="text">
        <description>
          <text>Plain text.</text>
        </description>
      </enum>
      <enum name="xml"/>
    </type>
  </typedef>

  <!-- RPCs -->

  <rpc name="zone-arming">
    <description>
      <text>Arm/disarm a zone.</text>
    </description>
    <input>
      <leaf name="zone-name">
        <mandatory value="true"/>
        <type name="zone-name"/>
        <description>
          <text>Name of the zone.</text>
        </description>
      </leaf>
      <leaf name="status">
        <type name="boolean"/>
        <default value="true"/>
        <description>
          <text>
            The desired status of the zone: 'true' means armed,
            'false' disarmed.
          </text>
        </description>
      </leaf>
    </input>
  </rpc>
  <rpc name="siren">
    <description>
      <text>
        Control the sound and LED status of a paired siren.
      </text>
    </description>
    <input>
      <leaf name="sound">
        <type name="boolean"/>
        <default value="false"/>
        <description>
          <text>
            Turn on or off the sound of the siren. 
          </text>
        </description>
      </leaf>
      <leaf name="sound-type">
        <type name="enumeration">
          <enum name="continuous"/>
          <enum name="fast-beeps"/>
          <enum name="slow-beeps"/>
        </type>
        <default value="continuous"/>
        <description>
          <text>Beep frequency of the sound.</text>
        </description>
      </leaf>
      <leaf name="led">
        <type name="boolean"/>
        <default value="false"/>
        <description>
          <text>
            Turn on or off the siren LED. 
          </text>
        </description>
      </leaf>
    </input>
  </rpc>
  <rpc name="pair">
    <description>
      <text>Control transmission of the pairing signal.</text>
    </description>
    <input>
      <leaf name="transmit">
        <type name="boolean"/>
        <default value="true"/>
        <description>
          <text>Turn on or off pairing transmission.</text>
        </description>
      </leaf>
    </input>
  </rpc>
  <rpc name="dump">
    <description>
      <text>Dump operational state data.</text>
    </description>
    <input>
      <leaf name="format">
        <type name="dump-format"/>
        <default value="text"/>
        <description>
          <text>
            Desired format of the state data.
          </text>
        </description>
      </leaf>
    </input>
    <output>
      <leaf name="format">
        <type name="dump-format"/>
      </leaf>
      <choice name="state-data">
        <leaf name="content">
          <when condition="../format != 'xml'"/>
          <type name="string"/>
          <description>
            <text>
              For 'json' and 'text' formats, a simple string is returned.
            </text>
          </description>
        </leaf>
        <anyxml name="securris-state">
          <description>
            <text>For 'xml' format, the contents is defined by the
            YANG module 'securris-state'.</text>
          </description>
        </anyxml>
      </choice>
    </output>
  </rpc>
  <rpc name="relay">
    <description>
      <text>
        Control a paired relay.
      </text>
    </description>
    <input>
      <leaf name="status">
        <type name="boolean"/>
        <default value="false"/>
        <description>
          <text>
            Turn the relay on or off.
          </text>
        </description>
      </leaf>
    </input>
  </rpc>
</module>
